{"version":3,"sources":["config/constants/meta.ts","utils/prices.ts","utils/wrappedCurrency.ts","hooks/usePairs.ts","hooks/useBUSDPrice.ts","components/Layout/Container.tsx","components/Layout/Page.tsx","views/NotFound.tsx"],"names":["DEFAULT_META","title","description","image","BASE_FEE","Percent","JSBI","BigInt","ONE_HUNDRED_PERCENT","subtract","wrappedCurrency","currency","chainId","ETHER","WETH","Token","undefined","PairState","PAIR_INTERFACE","Interface","IUniswapV2PairABI","usePairs","currencies","useActiveWeb3React","tokens","useMemo","map","currencyA","currencyB","pairAddresses","tokenA","tokenB","equals","Pair","getAddress","results","useMultipleContractSingleData","result","i","reserves","loading","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","sortsBefore","token0","token1","EXISTS","TokenAmount","toString","BUSD_MAINNET","mainnetTokens","busd","WBNB","wbnb","useBUSDPrice","wrapped","currencyEquals","ChainId","MAINNET","ethPairState","ethPair","busdPairState","busdPair","busdEthPairState","busdEthPair","price","priceOf","Price","denominator","numerator","ethPairETHAmount","reserveOf","ethPairETHBUSDValue","quote","raw","greaterThan","ethBusdPrice","currencyEthPrice","busdPrice","multiply","invert","useCakeBusdPrice","cake","Container","children","props","px","mx","maxWidth","StyledPage","styled","theme","mediaQueries","sm","lg","PageMeta","symbol","cakePriceUsd","useTranslation","t","useLocation","pathname","cakePriceUsdDisplay","toFixed","pageMeta","pageTitle","join","property","content","Page","StyledNotFound","div","NotFound","width","mb","scale","as","Link","to"],"mappings":"wNAGaA,EAAyB,CACpCC,MAAO,SACPC,YACE,SACFC,MAAO,8B,+BCIHC,G,wBAAW,IAAIC,IAAQC,IAAKC,OAAO,IAAKD,IAAKC,OAAO,OACpDC,EAAsB,IAAIH,IAAQC,IAAKC,OAAO,KAAQD,IAAKC,OAAO,MACvCC,EAAoBC,SAASL,GCXvD,SAASM,EAAgBC,EAAgCC,GAC9D,OAAOA,GAAWD,IAAaE,IAAQC,IAAKF,GAAWD,aAAoBI,IAAQJ,OAAWK,E,ICQpFC,E,2BAFNC,EAAiB,IAAIC,IAAUC,KAS9B,SAASC,EAASC,GACvB,IAAQV,EAAYW,cAAZX,QAEFY,EAASC,mBACb,kBACEH,EAAWI,KAAI,mCAAEC,EAAF,KAAaC,EAAb,WAA4B,CACzClB,EAAgBiB,EAAWf,GAC3BF,EAAgBkB,EAAWhB,SAE/B,CAACA,EAASU,IAGNO,EAAgBJ,mBACpB,kBACED,EAAOE,KAAI,YAAuB,IAAD,mBAApBI,EAAoB,KAAZC,EAAY,KAC/B,OAAOD,GAAUC,IAAWD,EAAOE,OAAOD,GAAUE,IAAKC,WAAWJ,EAAQC,QAAUf,OAE1F,CAACQ,IAGGW,EAAUC,YAA8BP,EAAeX,EAAgB,eAE7E,OAAOO,mBAAQ,WACb,OAAOU,EAAQT,KAAI,SAACW,EAAQC,GAC1B,IAAgBC,EAAsBF,EAA9BA,OAAkBG,EAAYH,EAAZG,QACpBV,EAASN,EAAOc,GAAG,GACnBP,EAASP,EAAOc,GAAG,GAEzB,GAAIE,EAAS,MAAO,CAACvB,EAAUwB,QAAS,MACxC,IAAKX,IAAWC,GAAUD,EAAOE,OAAOD,GAAS,MAAO,CAACd,EAAUyB,QAAS,MAC5E,IAAKH,EAAU,MAAO,CAACtB,EAAU0B,WAAY,MAC7C,IAAQC,EAAuBL,EAAvBK,SAAUC,EAAaN,EAAbM,SAClB,EAAyBf,EAAOgB,YAAYf,GAAU,CAACD,EAAQC,GAAU,CAACA,EAAQD,GAAlF,mBAAOiB,EAAP,KAAeC,EAAf,KACA,MAAO,CACL/B,EAAUgC,OACV,IAAIhB,IAAK,IAAIiB,IAAYH,EAAQH,EAASO,YAAa,IAAID,IAAYF,EAAQH,EAASM,mBAG3F,CAAChB,EAASX,K,SA7CHP,O,qBAAAA,I,2BAAAA,I,mBAAAA,I,sBAAAA,M,KCHZ,IAAMmC,EAAeC,IAAcC,KACrBC,EAAS/B,IAAfgC,KAMO,SAASC,EAAa9C,GACnC,IAAQC,EAAYW,cAAZX,QACF8C,EAAUhD,EAAgBC,EAAUC,GAS1C,EAA8FS,EAR3BI,mBACjE,iBAAM,CACJ,CAACb,GAAW8C,GAAWC,YAAeJ,EAAMG,QAAW1C,EAAYL,EAAUC,EAAU2C,OAAOvC,GAC9F,EAAQ,OAAP0C,QAAO,IAAPA,OAAA,EAAAA,EAAS1B,OAAOoB,SAAgBpC,EAAY0C,EAAS9C,IAAYgD,IAAQC,QAAUT,OAAepC,GACnG,CAACJ,EAAU2C,OAAOvC,EAAWJ,IAAYgD,IAAQC,QAAUT,OAAepC,MAE5E,CAACJ,EAASD,EAAU+C,KAEtB,yCAAQI,EAAR,KAAsBC,EAAtB,2BAAiCC,EAAjC,KAAgDC,EAAhD,2BAA4DC,EAA5D,KAA8EC,EAA9E,KAEA,OAAO1C,mBAAQ,WACb,GAAKd,GAAa+C,GAAY9C,EAI9B,GAAI8C,EAAQ1B,OAAOuB,IACjB,GAAIU,EAAU,CACZ,IAAMG,EAAQH,EAASI,QAAQd,GAC/B,OAAO,IAAIe,IAAM3D,EAAUyC,EAAcgB,EAAMG,YAAaH,EAAMI,gBAHtE,CAQA,GAAId,EAAQ1B,OAAOoB,GACjB,OAAO,IAAIkB,IAAMlB,EAAcA,EAAc,IAAK,KAGpD,IAAMqB,EAAgB,OAAGV,QAAH,IAAGA,OAAH,EAAGA,EAASW,UAAUnB,GACtCoB,EACJF,GAAoBN,EAAcA,EAAYE,QAAQd,GAAMqB,MAAMH,GAAkBI,IAAMvE,IAAKC,OAAO,GAIxG,GACEyD,IAAkB/C,EAAUgC,QAC5BgB,GACAA,EAASS,UAAUtB,GAAc0B,YAAYH,GAC7C,CACA,IAAMP,EAAQH,EAASI,QAAQX,GAC/B,OAAO,IAAIY,IAAM3D,EAAUyC,EAAcgB,EAAMG,YAAaH,EAAMI,WAEpE,GAAIV,IAAiB7C,EAAUgC,QAAUc,GAAWG,IAAqBjD,EAAUgC,QAAUkB,GACvFA,EAAYO,UAAUtB,GAAc0B,YAAY,MAAQf,EAAQW,UAAUnB,GAAMuB,YAAY,KAAM,CACpG,IAAMC,EAAeZ,EAAYE,QAAQjB,GACnC4B,EAAmBjB,EAAQM,QAAQd,GACnC0B,EAAYF,EAAaG,SAASF,GAAkBG,SAC1D,OAAO,IAAIb,IAAM3D,EAAUyC,EAAc6B,EAAUV,YAAaU,EAAUT,eAK7E,CAAC5D,EAASD,EAAUoD,EAASD,EAAcK,EAAaD,EAAkBD,EAAUD,EAAeN,IAGjG,I,IAAM0B,EAAmB,WAE9B,OADsB3B,EAAajC,IAAO6D,O,sBChE7BC,EANuB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAaC,EAAhB,wBACpC,cAAC,IAAD,yBAAKC,GAAI,CAAC,OAAQ,QAASC,GAAG,OAAOC,SAAS,UAAaH,GAA3D,aACGD,M,wBCICK,EAAaC,YAAOP,EAAPO,CAAH,oPAKZ,qBAAGC,MAAkBC,aAAaC,MAKlC,qBAAGF,MAAkBC,aAAaE,MAMzBC,EAA0C,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAGlDC,GAFQC,cAANC,EACaC,cAAbC,SACapB,KACfqB,EAAsBL,EAAY,WAAOA,EAAaM,QAAQ,IAAO,MAErEC,ENpBC,CACL1G,MAAM,WMmBuC,GAC/C,6BAA2CD,GAAiB2G,GAApD1G,EAAR,EAAQA,MAAOC,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,MACxByG,EAAYH,EAAsB,CAACxG,EAAOwG,GAAqBI,KAAK,OAAS5G,EAKjF,OAJIkG,IACFS,EAAY,CAACT,EAAQlG,GAAO4G,KAAK,QAIjC,eAAC,IAAD,WACE,gCAAQD,IACR,sBAAME,SAAS,WAAWC,QAAS9G,IACnC,sBAAM6G,SAAS,iBAAiBC,QAAS7G,IACzC,sBAAM4G,SAAS,WAAWC,QAAS5G,QAkB1B6G,EATmB,SAAC,GAAoC,IAAlCzB,EAAiC,EAAjCA,SAAUY,EAAuB,EAAvBA,OAAWX,EAAY,iBACpE,OACE,qCACE,cAAC,EAAD,CAAUW,OAAQA,IAClB,cAACP,EAAD,2BAAgBJ,GAAhB,aAAwBD,SCjDxB0B,EAAiBpB,IAAOqB,IAAV,4JAyBLC,UAjBE,WACf,IAAQb,EAAMD,cAANC,EAER,OACE,cAAC,EAAD,UACE,eAACW,EAAD,WACE,cAAC,IAAD,CAAUG,MAAM,OAAOC,GAAG,QAC1B,cAAC,IAAD,CAASC,MAAM,MAAf,iBACA,cAAC,IAAD,CAAMD,GAAG,OAAT,SAAiBf,EAAE,2BACnB,cAAC,IAAD,CAAQiB,GAAIC,IAAMC,GAAG,IAAIH,MAAM,KAA/B,SACGhB,EAAE","file":"static/js/9.0d5a2dc2.chunk.js","sourcesContent":["import { ContextApi } from 'contexts/Localization/types'\r\nimport { PageMeta } from './types'\r\n\r\nexport const DEFAULT_META: PageMeta = {\r\n  title: 'QT Pie',\r\n  description:\r\n    'QT Pie',\r\n  image: 'https://qtpie.com/logo.png',\r\n}\r\n\r\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\r\n  return {\r\n    title: `QT Pie`,\r\n  }\r\n}\r\n","import { CurrencyAmount, Fraction, JSBI, Percent, Price, TokenAmount, Trade } from '@pancakeswap/sdk'\r\nimport {\r\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\r\n  ALLOWED_PRICE_IMPACT_HIGH,\r\n  ALLOWED_PRICE_IMPACT_LOW,\r\n  ALLOWED_PRICE_IMPACT_MEDIUM,\r\n} from '../config/constants'\r\n\r\nimport { Field } from '../state/swap/actions'\r\nimport { basisPointsToPercent } from './index'\r\n\r\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\r\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\r\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\r\n\r\n// computes price breakdown for the trade\r\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\r\n  priceImpactWithoutFee: Percent | undefined\r\n  realizedLPFee: CurrencyAmount | undefined | null\r\n} {\r\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\r\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\r\n  const realizedLPFee = !trade\r\n    ? undefined\r\n    : ONE_HUNDRED_PERCENT.subtract(\r\n        trade.route.pairs.reduce<Fraction>(\r\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\r\n          ONE_HUNDRED_PERCENT,\r\n        ),\r\n      )\r\n\r\n  // remove lp fees from price impact\r\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\r\n\r\n  // the x*y=k impact\r\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\r\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\r\n    : undefined\r\n\r\n  // the amount of the input that accrues to LPs\r\n  const realizedLPFeeAmount =\r\n    realizedLPFee &&\r\n    trade &&\r\n    (trade.inputAmount instanceof TokenAmount\r\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\r\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\r\n\r\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\r\n}\r\n\r\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\r\nexport function computeSlippageAdjustedAmounts(\r\n  trade: Trade | undefined,\r\n  allowedSlippage: number,\r\n): { [field in Field]?: CurrencyAmount } {\r\n  const pct = basisPointsToPercent(allowedSlippage)\r\n  return {\r\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\r\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\r\n  }\r\n}\r\n\r\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\r\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\r\n  return 0\r\n}\r\n\r\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\r\n  if (!trade) {\r\n    return ''\r\n  }\r\n  return inverted\r\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\r\n        trade.outputAmount.currency.symbol\r\n      }`\r\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\r\n        trade.inputAmount.currency.symbol\r\n      }`\r\n}\r\n\r\n/**\r\n * Helper to multiply a Price object by an arbitrary amount\r\n */\r\nexport const multiplyPriceByAmount = (price: Price, amount: number, significantDigits = 18) => {\r\n  if (!price) {\r\n    return 0\r\n  }\r\n\r\n  return parseFloat(price.toSignificant(significantDigits)) * amount\r\n}\r\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\r\n\r\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\r\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\r\n}\r\n\r\nexport function wrappedCurrencyAmount(\r\n  currencyAmount: CurrencyAmount | undefined,\r\n  chainId: ChainId | undefined,\r\n): TokenAmount | undefined {\r\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\r\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\r\n}\r\n\r\nexport function unwrappedToken(token: Token): Currency {\r\n  if (token.equals(WETH[token.chainId])) return ETHER\r\n  return token\r\n}\r\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\n\r\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\r\n\r\nexport enum PairState {\r\n  LOADING,\r\n  NOT_EXISTS,\r\n  EXISTS,\r\n  INVALID,\r\n}\r\n\r\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const tokens = useMemo(\r\n    () =>\r\n      currencies.map(([currencyA, currencyB]) => [\r\n        wrappedCurrency(currencyA, chainId),\r\n        wrappedCurrency(currencyB, chainId),\r\n      ]),\r\n    [chainId, currencies],\r\n  )\r\n\r\n  const pairAddresses = useMemo(\r\n    () =>\r\n      tokens.map(([tokenA, tokenB]) => {\r\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\r\n      }),\r\n    [tokens],\r\n  )\r\n\r\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\r\n\r\n  return useMemo(() => {\r\n    return results.map((result, i) => {\r\n      const { result: reserves, loading } = result\r\n      const tokenA = tokens[i][0]\r\n      const tokenB = tokens[i][1]\r\n\r\n      if (loading) return [PairState.LOADING, null]\r\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\r\n      if (!reserves) return [PairState.NOT_EXISTS, null]\r\n      const { reserve0, reserve1 } = reserves\r\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return [\r\n        PairState.EXISTS,\r\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\r\n      ]\r\n    })\r\n  }, [results, tokens])\r\n}\r\n\r\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\r\n  return usePairs([[tokenA, tokenB]])[0]\r\n}\r\n","import { ChainId, Currency, currencyEquals, JSBI, Price } from '@pancakeswap/sdk'\r\nimport tokens, { mainnetTokens } from 'config/constants/tokens'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useMemo } from 'react'\r\nimport { multiplyPriceByAmount } from 'utils/prices'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\nimport { PairState, usePairs } from './usePairs'\r\n\r\nconst BUSD_MAINNET = mainnetTokens.busd\r\nconst { wbnb: WBNB } = tokens\r\n\r\n/**\r\n * Returns the price in BUSD of the input currency\r\n * @param currency currency to compute the BUSD price of\r\n */\r\nexport default function useBUSDPrice(currency?: Currency): Price | undefined {\r\n  const { chainId } = useActiveWeb3React()\r\n  const wrapped = wrappedCurrency(currency, chainId)\r\n  const tokenPairs: [Currency | undefined, Currency | undefined][] = useMemo(\r\n    () => [\r\n      [chainId && wrapped && currencyEquals(WBNB, wrapped) ? undefined : currency, chainId ? WBNB : undefined],\r\n      [wrapped?.equals(BUSD_MAINNET) ? undefined : wrapped, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\r\n      [chainId ? WBNB : undefined, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\r\n    ],\r\n    [chainId, currency, wrapped],\r\n  )\r\n  const [[ethPairState, ethPair], [busdPairState, busdPair], [busdEthPairState, busdEthPair]] = usePairs(tokenPairs)\r\n\r\n  return useMemo(() => {\r\n    if (!currency || !wrapped || !chainId) {\r\n      return undefined\r\n    }\r\n    // handle weth/eth\r\n    if (wrapped.equals(WBNB)) {\r\n      if (busdPair) {\r\n        const price = busdPair.priceOf(WBNB)\r\n        return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\r\n      }\r\n      return undefined\r\n    }\r\n    // handle busd\r\n    if (wrapped.equals(BUSD_MAINNET)) {\r\n      return new Price(BUSD_MAINNET, BUSD_MAINNET, '1', '1')\r\n    }\r\n\r\n    const ethPairETHAmount = ethPair?.reserveOf(WBNB)\r\n    const ethPairETHBUSDValue: JSBI =\r\n      ethPairETHAmount && busdEthPair ? busdEthPair.priceOf(WBNB).quote(ethPairETHAmount).raw : JSBI.BigInt(0)\r\n\r\n    // all other tokens\r\n    // first try the busd pair\r\n    if (\r\n      busdPairState === PairState.EXISTS &&\r\n      busdPair &&\r\n      busdPair.reserveOf(BUSD_MAINNET).greaterThan(ethPairETHBUSDValue)\r\n    ) {\r\n      const price = busdPair.priceOf(wrapped)\r\n      return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\r\n    }\r\n    if (ethPairState === PairState.EXISTS && ethPair && busdEthPairState === PairState.EXISTS && busdEthPair) {\r\n      if (busdEthPair.reserveOf(BUSD_MAINNET).greaterThan('0') && ethPair.reserveOf(WBNB).greaterThan('0')) {\r\n        const ethBusdPrice = busdEthPair.priceOf(BUSD_MAINNET)\r\n        const currencyEthPrice = ethPair.priceOf(WBNB)\r\n        const busdPrice = ethBusdPrice.multiply(currencyEthPrice).invert()\r\n        return new Price(currency, BUSD_MAINNET, busdPrice.denominator, busdPrice.numerator)\r\n      }\r\n    }\r\n\r\n    return undefined\r\n  }, [chainId, currency, ethPair, ethPairState, busdEthPair, busdEthPairState, busdPair, busdPairState, wrapped])\r\n}\r\n\r\nexport const useCakeBusdPrice = (): Price | undefined => {\r\n  const cakeBusdPrice = useBUSDPrice(tokens.cake)\r\n  return cakeBusdPrice\r\n}\r\n\r\nexport const useBUSDCurrencyAmount = (currency: Currency, amount: number): number | undefined => {\r\n  const { chainId } = useActiveWeb3React()\r\n  const busdPrice = useBUSDPrice(currency)\r\n  const wrapped = wrappedCurrency(currency, chainId)\r\n  if (busdPrice) {\r\n    return multiplyPriceByAmount(busdPrice, amount, wrapped.decimals)\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport const useBUSDCakeAmount = (amount: number): number | undefined => {\r\n  const cakeBusdPrice = useCakeBusdPrice()\r\n  if (cakeBusdPrice) {\r\n    return multiplyPriceByAmount(cakeBusdPrice, amount)\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport const useBNBBusdPrice = (): Price | undefined => {\r\n  const bnbBusdPrice = useBUSDPrice(tokens.wbnb)\r\n  return bnbBusdPrice\r\n}\r\n","import React from 'react'\r\nimport { Box, BoxProps } from '@pancakeswap/uikit'\r\n\r\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\r\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\r\n    {children}\r\n  </Box>\r\n)\r\n\r\nexport default Container\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Helmet } from 'react-helmet-async'\r\nimport { useLocation } from 'react-router'\r\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\r\nimport { useCakeBusdPrice } from 'hooks/useBUSDPrice'\r\nimport Container from './Container'\r\n\r\nconst StyledPage = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport const PageMeta: React.FC<{ symbol?: string }> = ({ symbol }) => {\r\n  const { t } = useTranslation()\r\n  const { pathname } = useLocation()\r\n  const cakePriceUsd = useCakeBusdPrice()\r\n  const cakePriceUsdDisplay = cakePriceUsd ? `$${cakePriceUsd.toFixed(3)}` : '...'\r\n\r\n  const pageMeta = getCustomMeta(pathname, t) || {}\r\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\r\n  let pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\r\n  if (symbol) {\r\n    pageTitle = [symbol, title].join(' - ')\r\n  }\r\n\r\n  return (\r\n    <Helmet>\r\n      <title>{pageTitle}</title>\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content={image} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\ninterface PageProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  symbol?: string\r\n}\r\n\r\nconst Page: React.FC<PageProps> = ({ children, symbol, ...props }) => {\r\n  return (\r\n    <>\r\n      <PageMeta symbol={symbol} />\r\n      <StyledPage {...props}>{children}</StyledPage>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, Text, LogoIcon } from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport Page from 'components/Layout/Page'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst StyledNotFound = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: calc(100vh - 64px);\r\n  justify-content: center;\r\n`\r\n\r\nconst NotFound = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Page>\r\n      <StyledNotFound>\r\n        <LogoIcon width=\"64px\" mb=\"8px\" />\r\n        <Heading scale=\"xxl\">404</Heading>\r\n        <Text mb=\"16px\">{t('Oops, page not found.')}</Text>\r\n        <Button as={Link} to=\"/\" scale=\"sm\">\r\n          {t('Back Home')}\r\n        </Button>\r\n      </StyledNotFound>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default NotFound\r\n"],"sourceRoot":""}