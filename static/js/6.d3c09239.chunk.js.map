{"version":3,"sources":["hooks/useTheme.ts","views/Dashboard/components/Hero.tsx","views/Dashboard/components/Investments/InvestItem.tsx","views/Dashboard/components/Investments/index.tsx","views/Dashboard/components/WalletAndAllocation/WalletItem.tsx","views/Dashboard/components/WalletAndAllocation/Wallet.tsx","views/Dashboard/components/WalletAndAllocation/Allocation.tsx","views/Dashboard/components/WalletAndAllocation/index.tsx","views/Dashboard/index.tsx"],"names":["useTheme","useThemeManager","isDark","toggleTheme","theme","useContext","StyledThemeContext","Hero","useTranslation","t","useWeb3React","account","className","src","alt","StyledIcon","styled","img","InvestItem","name","worth","icon","collect","Investments","WalletItem","tokenPrice","tokenBalance","native","price","balance","type","tokenName","toLowerCase","renderNormalItem","Wallet","StyledAllocationArea","div","Allocation","renderAllocationItem","percent","style","width","WalletAndAllocation","Dashboard"],"mappings":"gKAUeA,IANE,WACf,MAA8BC,cAA9B,mBAAOC,EAAP,KAAeC,EAAf,KAEA,MAAO,CAAED,SAAQE,MADHC,qBAAWC,KACDH,iB,qFCoCXI,EApCQ,WACPC,cAANC,EACUT,cAAVI,MACYM,cAAZC,QAER,OACE,yBAASC,UAAU,aAAnB,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,2CACA,+CAGJ,qBAAKA,UAAU,uBAAf,SACE,qBAAKC,IAAI,iBAAiBD,UAAU,YAAYE,IAAI,UAEtD,qBAAKF,UAAU,WAAf,SACE,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,MAAhB,qBACA,sBAAMA,UAAU,MAAhB,2BAEF,sBAAKA,UAAU,WAAf,UACE,sBAAMA,UAAU,MAAhB,sBACA,sBAAMA,UAAU,MAAhB,sC,gBCzBVG,EAAaC,IAAOC,IAAV,6DAqCDC,EAzB+B,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC1Db,EAAMD,cAANC,EACUT,cAAVI,MACYM,cAAZC,QAER,OACE,sBAAKC,UAAU,oBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,6BAAKO,IACL,+BAAOV,EAAE,IAAD,OAAKW,SAEf,qBAAKR,UAAU,oBAAf,SACE,cAACG,EAAD,CAAYF,IAAG,iBAAYQ,EAAZ,QAAwBP,IAAKO,WAIlD,qBAAKT,UAAU,WAAf,oBACOU,EADP,qBCNSC,EAvBe,WACdf,cAANC,EACUT,cAAVI,MACYM,cAAZC,QAER,OACE,mCACE,yBAASC,UAAU,aAAnB,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,oCAAf,UACE,mDACA,sBAAKA,UAAU,MAAf,UACE,cAAC,EAAD,CAAYO,KAAK,UAAUC,MAAO,OAAQC,KAAK,KAAKC,QAAS,MAC7D,cAAC,EAAD,CAAYH,KAAK,WAAWC,MAAO,MAAQC,KAAK,KAAKC,QAAS,MAC9D,cAAC,EAAD,CAAYH,KAAK,YAAYC,MAAO,OAAQC,KAAK,KAAKC,QAAS,mBCgD9DE,EAzD+B,SAAC,GAA0D,IA+BhFC,EAAYC,EA/BmE,IAAvDC,cAAuD,aAAtCR,YAAsC,MAA/B,SAA+B,EAArBS,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAChFpB,EAAMD,cAANC,EACUT,cAAVI,MACYM,cAAZC,QA+CR,OACE,mCACGgB,GArBkBF,EAqBKG,EArBOF,EAqBAG,EAnB/B,sBAAKjB,UAAU,gCAAf,UACE,qBAAKA,UAAU,+BAA+BC,IAAI,kBAAkBC,IAAI,SACxE,sBAAKF,UAAU,2DAAf,UACE,sBAAKA,UAAU,WAAf,UACE,mBAAGA,UAAU,kCAAb,SAAgDO,IAChD,mBAAGP,UAAU,UAAb,oBAA4Ba,EAAaC,QAE3C,qBAAKd,UAAU,UAAf,SACE,wBAAQkB,KAAK,SAASlB,UAAU,qEAAhC,SACGH,EAAE,OAAD,OAAQU,eArCG,SAACY,EAAWN,EAAYC,GAC/C,OACE,sBAAKd,UAAU,iFAAf,UACE,qBAAKA,UAAU,+BAA+BC,IAAG,iBAAYM,EAAKa,cAAjB,QAAsClB,IAAI,KAC3F,sBAAKF,UAAU,yBAAf,UACE,sBAAKA,UAAU,gCAAf,UACE,mBAAGA,UAAU,0BAAb,SAAwCmB,IACxC,sBAAMnB,UAAU,aAAhB,SACE,qBAAKA,UAAU,4CAAf,SACE,yCACOa,EAAaC,YAK1B,sBAAKd,UAAU,2DAAf,UACE,uCAAQa,KACR,sBAAMb,UAAU,aAAhB,SAA6B,uBAAMA,UAAU,yBAAhB,qBACxBc,GACL,sBAAMd,UAAU,YAAhB,SAA6BmB,kBA4BOE,CAAiBd,EAAMS,EAAOC,MCnC/DK,EAvBU,WACT1B,cAANC,EACUT,cAAVI,MACYM,cAAZC,QAER,OACE,qBAAKC,UAAU,2BAAf,SACE,sBAAKA,UAAU,SAAf,UACE,wCACA,cAAC,EAAD,CAAYe,QAAM,EAACC,MAAO,IAAKC,QAAS,MACxC,cAAC,EAAD,CAAYV,KAAK,UAAUS,MAAO,MAAOC,QAAS,QAClD,cAAC,EAAD,CAAYV,KAAK,OAAOS,MAAO,MAAOC,QAAS,QAC/C,cAAC,EAAD,CAAYV,KAAK,MAAMS,MAAO,OAAQC,QAAS,QAC/C,qBAAKjB,UAAU,oBAAf,SACE,wBAAQkB,KAAK,SAASlB,UAAU,2HAAhC,sDCfJuB,EAAuBnB,IAAOoB,IAAV,gDAsCXC,EAlCc,WACb7B,cAANC,EACUT,cAAVI,MACYM,cAAZC,QAFR,IAIM2B,EAAuB,SAACnB,EAAMoB,GAClC,OACE,eAACJ,EAAD,WACE,sBAAKvB,UAAU,+BAAf,UACE,qBAAKA,UAAU,sCAAf,SACGO,IAEH,sBAAMP,UAAU,eAAhB,mBAAmC2B,EAAnC,UAEF,qBAAK3B,UAAU,2DAAf,SACE,qBAAKA,UAAU,0BAA0B4B,MAAO,CAACC,MAAM,GAAD,OAAKF,EAAL,cAM9D,OACE,qBAAK3B,UAAU,2BAAf,SACE,sBAAKA,UAAU,SAAf,UACE,kDACC0B,EAAqB,SAAU,OAC/BA,EAAqB,UAAW,MAChCA,EAAqB,OAAQ,MAC7BA,EAAqB,MAAO,YCXtBI,EAnBuB,WACtBlC,cAANC,EACUT,cAAVI,MACYM,cAAZC,QAER,OACE,yBAASC,UAAU,aAAnB,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,oCAAf,SACE,sBAAKA,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,cCKG+B,UAda,WACZnC,cAANC,EACUT,cAAVI,MACYM,cAAZC,QAER,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD","file":"static/js/6.d3c09239.chunk.js","sourcesContent":["import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\r\nimport { useThemeManager } from 'state/user/hooks'\r\n\r\nconst useTheme = () => {\r\n  const [isDark, toggleTheme] = useThemeManager()\r\n  const theme = useContext(StyledThemeContext)\r\n  return { isDark, theme, toggleTheme }\r\n}\r\n\r\nexport default useTheme\r\n","import React from 'react'\r\nimport { Button, Card, CardBody, CardHeader, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst Hero: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { account } = useWeb3React()\r\n\r\n  return (\r\n    <section className=\"top-header\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\">\r\n            <div className=\"pagehead mps-tp\">\r\n              <h1>$ 568.56 </h1>\r\n              <p>Net Worth</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 text-center\">\r\n            <img src=\"images/pie.png\" className=\"img-fluid\" alt=\"pie\" />\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div className=\"mps-tp\">\r\n              <div className=\"bg-light mb-3\">\r\n                <span className=\"sp1\">$25.55 </span>\r\n                <span className=\"sp2\">to collect</span>\r\n              </div>\r\n              <div className=\"bg-light\">\r\n                <span className=\"sp1\">$560.64 </span>\r\n                <span className=\"sp2\">borrowed</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import React from 'react'\r\nimport { Button, Card, CardBody, CardHeader, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { PageMeta } from 'components/Layout/Page'\r\n\r\nconst StyledIcon = styled.img`\r\n  width: 80px;\r\n  height: 80px;\r\n`\r\n\r\ninterface InvestItemProps {\r\n  name: string\r\n  worth: number\r\n  icon: string\r\n  collect: number\r\n}\r\n\r\nconst InvestItem: React.FC<InvestItemProps> = ({ name, worth, icon, collect }) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { account } = useWeb3React()\r\n\r\n  return (\r\n    <div className=\"col-md-4 col-lg-4\">\r\n      <div className=\"difi_bx\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 col-lg-8\">\r\n            <h3>{name}</h3>\r\n            <span>{t(`$${worth}`)}</span>\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <StyledIcon src={`images/${icon}.png`} alt={icon} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"difi_btn\">\r\n        {`$${collect} to collect`}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InvestItem\r\n","import React from 'react'\r\nimport { Button, Card, CardBody, CardHeader, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { PageMeta } from 'components/Layout/Page'\r\nimport InvestItem from './InvestItem'\r\n\r\nconst Investments: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { account } = useWeb3React()\r\n\r\n  return (\r\n    <>\r\n      <section className=\"shadow-box\">\r\n        <div className=\"container\">\r\n          <div className=\"col-md-11 col-lg-11 col-12 m-auto\">\r\n            <h2> DeFi investments</h2>\r\n            <div className=\"row\">\r\n              <InvestItem name=\"Uniswap\" worth={786.86} icon=\"d1\" collect={2.6} />\r\n              <InvestItem name=\"USDT-ETH\" worth={0.0019} icon=\"d2\" collect={2.6} />\r\n              <InvestItem name=\"ETH-Matic\" worth={45.876} icon=\"d3\" collect={2.6} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Investments\r\n","import React from 'react'\r\nimport { Button, Card, CardBody, CardHeader, Flex, Heading, Text, BinanceIcon } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface WalletItemProps {\r\n  native?: boolean\r\n  name?: string\r\n  price: number\r\n  balance: number\r\n}\r\n\r\nconst WalletItem: React.FC<WalletItemProps> = ({ native =  false, name = \"QT PIE\", price, balance }) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { account } = useWeb3React()\r\n\r\n  const renderNormalItem = (tokenName, tokenPrice, tokenBalance) => {\r\n    return (\r\n      <div className=\"flex items-center hover:bg-linen cursor-pointer py-12 px-24 rounded-10 text-16\">\r\n        <img className=\"rounded-full h-24 w-24 mr-24\" src={`images/${name.toLowerCase()}.png`} alt=\"\" />\r\n        <div className=\"flex-grow leading-1.25\">\r\n          <div className=\"flex justify-between relative\">\r\n            <p className=\"font-700 uppercase mb-8\">{tokenName}</p>\r\n            <span className=\"text-right\">\r\n              <div className=\"flex items-center uppercase mb-8 font-700\">\r\n                <div>\r\n                  {`$${tokenPrice * tokenBalance}`}\r\n                </div>\r\n              </div>\r\n            </span>\r\n          </div>\r\n          <div className=\"flex justify-between text-dark-64 text-14 tablet:text-16\">\r\n            <p>{`$${tokenPrice}`}</p>\r\n            <span className=\"text-right\"><span className=\"text-14 tablet:text-16\">\r\n            {`$${tokenBalance}`}\r\n            <span className=\"uppercase\">{tokenName}</span></span></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderPieItem = (tokenPrice, tokenBalance) => {\r\n    return (\r\n      <div className=\"flex items-center py-12 px-24\">\r\n        <img className=\"rounded-full h-24 w-24 mr-24\" src=\"images/logo.png\" alt=\"logo\" />\r\n        <div className=\"flex items-center justify-between flex-grow leading-1.25\">\r\n          <div className=\"relative\">\r\n            <p className=\"font-700 uppercase mb-8 text-18\">{name}</p>\r\n            <p className=\"text-14\">{`$${tokenPrice * tokenBalance}`}</p>\r\n          </div>\r\n          <div className=\"text-14\">\r\n            <button type=\"button\" className=\"rounded-10 py-8 block font-700 px-16 relative bg-primary text-dark\">\r\n              {t(`Buy ${name}`)}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {native ? renderPieItem(price, balance) : renderNormalItem(name, price, balance)}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WalletItem\r\n","import React from 'react'\r\nimport { Button, Card, CardBody, CardHeader, Flex, Heading, Text, BinanceIcon } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport WalletItem from './WalletItem'\r\n\r\nconst Wallet: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { account } = useWeb3React()\r\n\r\n  return (\r\n    <div className=\"col-md-6 col-lg-6 col-12\">\r\n      <div className=\"spacer\">\r\n        <h4>Wallet</h4>\r\n        <WalletItem native price={2.1} balance={1.2} />\r\n        <WalletItem name=\"UNISWAP\" price={16.18} balance={0.8912} />\r\n        <WalletItem name=\"USDT\" price={16.18} balance={0.8912} />\r\n        <WalletItem name=\"ETH\" price={4042.6} balance={0.8912} />\r\n        <div className=\"text-center mt-16\">\r\n          <button type=\"button\" className=\"rounded-10 transition-colors duration-300 focus:outline-none ease-in-out py-8 font-700 text-14 px-16 btn-pink text-light\">\r\n            Convert small balances to QT PIE\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Wallet\r\n","import React from 'react'\r\nimport { Button, Card, CardBody, CardHeader, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst StyledAllocationArea = styled.div`\r\n  padding: 17px 0;\r\n`\r\n\r\nconst Allocation: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { account } = useWeb3React()\r\n\r\n  const renderAllocationItem = (name, percent) => {\r\n    return (\r\n      <StyledAllocationArea>\r\n        <div className=\"flex justify-between text-16\">\r\n          <div className=\"inline-flex items-baseline font-700\">\r\n            {name}\r\n          </div>\r\n          <span className=\"text-dark-64\">{`${percent}%`}</span>\r\n        </div>\r\n        <div className=\"relative rounded-full bg-linen mt-8 h-10 overflow-hidden\">\r\n          <div className=\"absolute h-10 bg-pacoca\" style={{width: `${percent}%`}} />\r\n        </div>\r\n      </StyledAllocationArea>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-md-6 col-lg-6 col-12\">\r\n      <div className=\"spacel\">\r\n        <h4>Asset Allocation</h4>\r\n        {renderAllocationItem('QT Pie', 95.71)}\r\n        {renderAllocationItem('Uniswap', 1.99)}\r\n        {renderAllocationItem('USDT', 1.08)}\r\n        {renderAllocationItem('ETH', 1.61)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Allocation\r\n","import React from 'react'\r\nimport { Button, Card, CardBody, CardHeader, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Wallet from './Wallet'\r\nimport Allocation from './Allocation'\r\n\r\nconst WalletAndAllocation: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { account } = useWeb3React()\r\n\r\n  return (\r\n    <section className=\"wallet_sec\">\r\n      <div className=\"container\">\r\n        <div className=\"col-md-11 col-lg-11 col-12 m-auto\">\r\n          <div className=\"row\">\r\n            <Wallet />\r\n            <Allocation />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default WalletAndAllocation\r\n","import React from 'react'\r\nimport { Button, Card, CardBody, CardHeader, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { PageMeta } from 'components/Layout/Page'\r\nimport Hero from './components/Hero'\r\nimport Investments from './components/Investments'\r\nimport WalletAndAllocation from './components/WalletAndAllocation'\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { account } = useWeb3React()\r\n\r\n  return (\r\n    <>\r\n      <Hero />\r\n      <Investments />\r\n      <WalletAndAllocation />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n"],"sourceRoot":""}